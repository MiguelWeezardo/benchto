benchmark-service:
  url: http://benchto.td.teradata.com

data-sources:
  presto:
    url: jdbc:presto://10.25.22.84:8888
    username: hdfs
    password: na
    driver-class-name: com.facebook.presto.jdbc.PrestoDriver
  teradata:
    url: jdbc:teradata://CLOUD10TD01-3-18.labs.teradata.com
    username: test_presto_user
    password: test_presto_password
    driver-class-name: com.teradata.jdbc.TeraDriver

environment:
  name: TD-HDP

presto:
  url: http://10.25.22.84:8888

graphite:
  url: http://benchto.td.teradata.com:8088
  resolution.seconds: 10
  metrics:
    cpu: asPercent(sumSeries(collectd.CLOUD10HD01-2-*.cpu.percent-{user,system}.value), sumSeries(collectd.CLOUD10HD01-2-*.cpu.*.value))
    memory: collectd.CLOUD10HD01-2-*.memory
    network: sumSeries(collectd.CLOUD10HD01-2-*.interface-*.if_octets.{rx,tx})

macros:
  drop-caches:
    command: hfab -P -R all other:querygrid_hdp_perf_cluster node.drop_caches && hfab -P -R all other:querygrid_td_perf_cluster node.drop_caches
  disk-usage-check:
    command: hfab -P -R all other:querygrid_hdp_perf_cluster node.shell:"! df -h | grep 100%" && hfab -P -R all other:querygrid_td_perf_cluster node.shell:"! df -h | grep 100%"
  sleep-rand-upto-2s:
    command: SLEEP=`awk -vmin=50 -vmax=2000 'BEGIN{srand(); print (min+rand()*(max-min+1))/1000}'` && echo "Sleeping for $SLEEP ms" && sleep $SLEEP
  restart-presto:
    command: hfab other:querygrid_hdp_perf_cluster presto.restart_presto && sleep 60

macroExecutions:
  healthCheck: disk-usage-check
  beforeAll: restart-presto

benchmark:
  feature:
    graphite:
      event.reporting.enabled: true
      metrics.collection.enabled: true
    presto:
      metrics.collection.enabled: true
